// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using SalonGarden.Infrastructure.Data;

namespace SalonGarden.Infrastructure.Migrations
{
    [DbContext(typeof(SalonGardenContext))]
    partial class SalonGardenContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.0.0-preview6.19304.10");

            modelBuilder.Entity("SalonGarden.Core.Entities.Evaluation", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<DateTime>("CreationDate");

                    b.Property<string>("Description");

                    b.Property<string>("EducatorId");

                    b.Property<int>("EvaluationStatusId");

                    b.Property<int>("EvaluationTypeId");

                    b.Property<string>("StudentId");

                    b.Property<int>("TechniqueId");

                    b.HasKey("Id");

                    b.HasIndex("EvaluationStatusId");

                    b.HasIndex("EvaluationTypeId");

                    b.ToTable("Evaluations");
                });

            modelBuilder.Entity("SalonGarden.Core.Entities.EvaluationCriteria", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Description");

                    b.Property<int?>("EvaluationCriteriaGroupId");

                    b.Property<int>("EvaluationCriterionGroupId");

                    b.Property<int>("SequenceNumber");

                    b.Property<int>("TotalPoints");

                    b.HasKey("Id");

                    b.HasIndex("EvaluationCriteriaGroupId");

                    b.ToTable("EvaluationCriterias");
                });

            modelBuilder.Entity("SalonGarden.Core.Entities.EvaluationCriteriaGroup", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Description");

                    b.Property<int>("SequenceNumber");

                    b.HasKey("Id");

                    b.ToTable("EvaluationCriteriaGroups");
                });

            modelBuilder.Entity("SalonGarden.Core.Entities.EvaluationDetailItem", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<int>("AllocatedPoints");

                    b.Property<int>("EvaluationCriteriaId");

                    b.Property<int>("EvaluationId");

                    b.HasKey("Id");

                    b.HasIndex("EvaluationId");

                    b.ToTable("EvaluationDetailItem");
                });

            modelBuilder.Entity("SalonGarden.Core.Entities.EvaluationStatus", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Description");

                    b.HasKey("Id");

                    b.ToTable("EvaluationStatus");
                });

            modelBuilder.Entity("SalonGarden.Core.Entities.EvaluationType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Description");

                    b.HasKey("Id");

                    b.ToTable("EvaluationType");
                });

            modelBuilder.Entity("SalonGarden.Core.Entities.Evaluation", b =>
                {
                    b.HasOne("SalonGarden.Core.Entities.EvaluationStatus", "EvaluationStatus")
                        .WithMany()
                        .HasForeignKey("EvaluationStatusId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SalonGarden.Core.Entities.EvaluationType", "EvaluationType")
                        .WithMany()
                        .HasForeignKey("EvaluationTypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("SalonGarden.Core.Entities.EvaluationCriteria", b =>
                {
                    b.HasOne("SalonGarden.Core.Entities.EvaluationCriteriaGroup", null)
                        .WithMany("EvaluationCriteria")
                        .HasForeignKey("EvaluationCriteriaGroupId");
                });

            modelBuilder.Entity("SalonGarden.Core.Entities.EvaluationDetailItem", b =>
                {
                    b.HasOne("SalonGarden.Core.Entities.Evaluation", null)
                        .WithMany("EvaluationDetailItems")
                        .HasForeignKey("EvaluationId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
